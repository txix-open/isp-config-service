// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-09-28 13:28:03.40325566 +0300 MSK m=+35.454929207

package docs

import (
	"github.com/integration-system/isp-lib/v2/docs"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "GNU GPL v3.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/common_config/compile": {
            "post": {
                "description": "Возвращает скомпилированный объект конфигурации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Общие конфигурации"
                ],
                "summary": "Метод компиляции итоговой конфигурации для модулей",
                "parameters": [
                    {
                        "description": "перечисление идентификаторов общей конфигурации и исхдных конфиг",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CompileConfigsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CompiledConfigResponse"
                        }
                    }
                }
            }
        },
        "/common_config/create_update_config": {
            "post": {
                "description": "Если конфиг с таким id существует, то обновляет данные, если нет, то добавляет данные в базу\nВ случае обновления рассылает всем подключенным модулям актуальную конфигурацию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Общие конфигурации"
                ],
                "summary": "Метод обновления общей конфигурации",
                "parameters": [
                    {
                        "description": "объект для сохранения",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CommonConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CommonConfig"
                        }
                    },
                    "404": {
                        "description": "если конфигурация не найдена",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/common_config/delete_config": {
            "post": {
                "description": "Возвращает флаг удаления и набор связей с модулями и конфигурациями, в случае наличия связей deleted всегда false",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Общие конфигурации"
                ],
                "summary": "Метод удаления объектов общей конфигурации по идентификаторам",
                "parameters": [
                    {
                        "description": "id общей конфигурации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeleteCommonConfigResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/common_config/get_configs": {
            "post": {
                "description": "Возвращает массив конфигураций по запрошенным идентификаторам (все, если массив пустой)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Общие конфигурации"
                ],
                "summary": "Метод получения объектов конфигурации по идентификаторам",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CommonConfig"
                            }
                        }
                    }
                }
            }
        },
        "/common_config/get_links": {
            "post": {
                "description": "Возвращает ассоциативный массив, ключами которого являются название модулей, а значения - название конфигурации модуля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Общие конфигурации"
                ],
                "summary": "Метод получения связей общей конфигурациями с конфигурацией модулей",
                "parameters": [
                    {
                        "description": "id общей конфигурации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CommonConfigLinks"
                        }
                    }
                }
            }
        },
        "/config/create_update_config": {
            "post": {
                "description": "Если конфиг с таким id существует, то обновляет данные, если нет, то добавляет данные в базу\nВ случае обновления рассылает всем подключенным модулям актуальную конфигурацию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод обновления конфигурации",
                "parameters": [
                    {
                        "description": "объект для сохранения",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateUpdateConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigModuleInfo"
                        }
                    },
                    "404": {
                        "description": "если конфигурация не найдена",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/delete_config": {
            "post": {
                "description": "Возвращает количество удаленных модулей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод удаления объектов конфигурации по идентификаторам",
                "parameters": [
                    {
                        "description": "массив идентификаторов конфигураций",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "если не указан массив идентификаторов",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/delete_version": {
            "post": {
                "description": "Возвращает количество удаленных версий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод удаления версии конфигурации",
                "parameters": [
                    {
                        "description": "id версии конфигурации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "если не указан массив идентификаторов",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/get_active_config_by_module_name": {
            "post": {
                "description": "Возвращает активную конфиграцию по названию модуля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод получения объекта конфигурации по названию модуля",
                "parameters": [
                    {
                        "description": "название модуля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GetByModuleNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Config"
                        }
                    },
                    "404": {
                        "description": "если конфигурация не найдена",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/get_all_version": {
            "post": {
                "description": "Возвращает предыдущие версии конфигураций",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод получение старых версий конфигурации",
                "parameters": [
                    {
                        "description": "id конфигурации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.VersionConfig"
                            }
                        }
                    },
                    "400": {
                        "description": "если не указан массив идентификаторов",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/get_config_by_id": {
            "post": {
                "description": "Возвращает актуальную версию конфигурации без дополнительного содержимого (ConfigData)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод получение актуальной конфигурации конфигурации",
                "parameters": [
                    {
                        "description": "id конфигурации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Config"
                        }
                    },
                    "400": {
                        "description": "если не указан идентификатор конфигурации",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/get_configs_by_module_id": {
            "post": {
                "description": "Возвращает список конфиграции по ID модуля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод получения списка конфигураций по ID модуля",
                "parameters": [
                    {
                        "description": "ID модуля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GetByModuleIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ConfigModuleInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "если идентификатор не указан",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "404": {
                        "description": "если конфигурация не найдена",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/config/mark_config_as_active": {
            "post": {
                "description": "Активирует указанную конфигурацию и деактивирует остальные, возвращает активированную конфигурацию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Конфигурация"
                ],
                "summary": "Метод активации конфигурации для модуля",
                "parameters": [
                    {
                        "description": "id конфигурации для изменения",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConfigIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "активированная конфигурация",
                        "schema": {
                            "$ref": "#/definitions/entity.Config"
                        }
                    },
                    "404": {
                        "description": "если конфигурация не найдена",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/module/broadcast_event": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Модули"
                ],
                "summary": "Метод отправки события всем подключенным модулям",
                "parameters": [
                    {
                        "description": "событие",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.BroadcastEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/module/delete_module": {
            "post": {
                "description": "Возвращает количество удаленных модулей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Модули"
                ],
                "summary": "Метод удаления объектов модулей по идентификаторам",
                "parameters": [
                    {
                        "description": "массив идентификаторов модулей",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeleteResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/module/get_by_name": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Модули"
                ],
                "summary": "Метод получения модуля по имени",
                "parameters": [
                    {
                        "description": "название модуля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GetByModuleNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Module"
                        }
                    },
                    "404": {
                        "description": "модуль с указанным названием не найден",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/module/get_modules_info": {
            "post": {
                "description": "Возвращает полное состояние всех модулей в кластере (конфигурация, схема конфигурации, подключенные экземпляры)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Модули"
                ],
                "summary": "Метод получения полной информации о состоянии модуля",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ModuleInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        },
        "/routing/get_routes": {
            "post": {
                "description": "Возвращает все доступные модули",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Роуты"
                ],
                "summary": "Метод получения маршрутов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structure.BackendDeclaration"
                            }
                        }
                    }
                }
            }
        },
        "/schema/get_by_module_id": {
            "post": {
                "description": "Возвращает текущую json схему конфигурации модуля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Схема"
                ],
                "summary": "Метод получения схемы конфигурации модуля",
                "parameters": [
                    {
                        "description": "идентификатор модуля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GetByModuleIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ConfigSchema"
                        }
                    },
                    "404": {
                        "description": "если схема для модуля не найдена",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structure.GrpcError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.BroadcastEventRequest": {
            "type": "object",
            "required": [
                "event",
                "moduleNames"
            ],
            "properties": {
                "event": {
                    "type": "string"
                },
                "moduleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payload": {
                    "type": "object",
                    "$ref": "#/definitions/json.RawMessage"
                }
            }
        },
        "domain.CommonConfigLinks": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "domain.CompileConfigsRequest": {
            "type": "object",
            "properties": {
                "commonConfigsIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "domain.CompiledConfigResponse": {
            "type": "object",
            "additionalProperties": true
        },
        "domain.ConfigIdRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "domain.ConfigModuleInfo": {
            "type": "object",
            "required": [
                "moduleId",
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "commonConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.ConfigData"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moduleId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "domain.Connection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "object",
                    "$ref": "#/definitions/structure.AddressConfiguration"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structure.EndpointDescriptor"
                    }
                },
                "establishedAt": {
                    "type": "string"
                },
                "libVersion": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "domain.CreateUpdateConfigRequest": {
            "type": "object",
            "required": [
                "moduleId",
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "commonConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.ConfigData"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moduleId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "unsafe": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "domain.DeleteCommonConfigResponse": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "$ref": "#/definitions/domain.CommonConfigLinks"
                }
            }
        },
        "domain.DeleteResponse": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "integer"
                }
            }
        },
        "domain.GetByModuleIdRequest": {
            "type": "object",
            "required": [
                "moduleId"
            ],
            "properties": {
                "moduleId": {
                    "type": "string"
                }
            }
        },
        "domain.GetByModuleNameRequest": {
            "type": "object",
            "required": [
                "moduleName"
            ],
            "properties": {
                "moduleName": {
                    "type": "string"
                }
            }
        },
        "domain.ModuleDependency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                }
            }
        },
        "domain.ModuleInfo": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "configSchema": {
                    "type": "object",
                    "$ref": "#/definitions/schema.Schema"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ConfigModuleInfo"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastConnectedAt": {
                    "type": "string"
                },
                "lastDisconnectedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "requiredModules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ModuleDependency"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Connection"
                    }
                }
            }
        },
        "entity.CommonConfig": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.ConfigData"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Config": {
            "type": "object",
            "required": [
                "moduleId",
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "commonConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.ConfigData"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moduleId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "entity.ConfigData": {
            "type": "object",
            "additionalProperties": true
        },
        "entity.ConfigSchema": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "moduleId": {
                    "type": "string"
                },
                "schema": {
                    "type": "object",
                    "$ref": "#/definitions/schema.Schema"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "entity.Module": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastConnectedAt": {
                    "type": "string"
                },
                "lastDisconnectedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.VersionConfig": {
            "type": "object",
            "properties": {
                "configId": {
                    "type": "string"
                },
                "configVersion": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.ConfigData"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "json.RawMessage": {
            "$ref": "#/definitions/json.RawMessage"
        },
        "jsonschema.Definitions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/jsonschema.Type"
            }
        },
        "jsonschema.Schema": {
            "type": "object",
            "properties": {
                "$ref": {
                    "description": "section 7",
                    "type": "string"
                },
                "$schema": {
                    "description": "RFC draft-wright-json-schema-00",
                    "type": "string"
                },
                "additionalItems": {
                    "description": "section 5.9",
                    "type": "integer"
                },
                "additionalProperties": {
                    "description": "section 5.18",
                    "type": "object",
                    "$ref": "#/definitions/json.RawMessage"
                },
                "allOf": {
                    "description": "section 5.22",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "anyOf": {
                    "description": "section 5.23",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "binaryEncoding": {
                    "description": "section 4.3",
                    "type": "string"
                },
                "default": {
                    "description": "section 6.2",
                    "type": "object"
                },
                "definitions": {
                    "type": "object",
                    "$ref": "#/definitions/jsonschema.Definitions"
                },
                "dependencies": {
                    "description": "section 5.19",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jsonschema.Type"
                    }
                },
                "description": {
                    "description": "section 6.1",
                    "type": "string"
                },
                "enum": {
                    "description": "section 5.20",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "exclusiveMaximum": {
                    "description": "section 5.3",
                    "type": "boolean"
                },
                "exclusiveMinimum": {
                    "description": "section 5.5",
                    "type": "boolean"
                },
                "format": {
                    "description": "section 7",
                    "type": "string"
                },
                "items": {
                    "description": "section 5.9",
                    "type": "integer"
                },
                "maxItems": {
                    "description": "section 5.10",
                    "type": "integer"
                },
                "maxLength": {
                    "description": "section 5.6",
                    "type": "integer"
                },
                "maxProperties": {
                    "description": "section 5.13",
                    "type": "integer"
                },
                "maximum": {
                    "description": "section 5.2",
                    "type": "integer"
                },
                "media": {
                    "description": "RFC draft-wright-json-schema-hyperschema-00, section 4",
                    "type": "integer"
                },
                "minItems": {
                    "description": "section 5.11",
                    "type": "integer"
                },
                "minLength": {
                    "description": "section 5.7",
                    "type": "integer"
                },
                "minProperties": {
                    "description": "section 5.14",
                    "type": "integer"
                },
                "minimum": {
                    "description": "section 5.4",
                    "type": "integer"
                },
                "multipleOf": {
                    "description": "RFC draft-wright-json-schema-validation-00, section 5",
                    "type": "integer"
                },
                "not": {
                    "description": "section 5.25",
                    "type": "integer"
                },
                "oneOf": {
                    "description": "section 5.24",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pattern": {
                    "description": "section 5.8",
                    "type": "string"
                },
                "patternProperties": {
                    "description": "section 5.17",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jsonschema.Type"
                    }
                },
                "properties": {
                    "description": "section 5.16",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jsonschema.Type"
                    }
                },
                "required": {
                    "description": "section 5.15",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "RFC draft-wright-json-schema-validation-00, section 6, 7",
                    "type": "string"
                },
                "type": {
                    "description": "section 5.21",
                    "type": "string"
                },
                "uniqueItems": {
                    "description": "section 5.12",
                    "type": "boolean"
                }
            }
        },
        "jsonschema.Type": {
            "type": "object",
            "properties": {
                "$ref": {
                    "description": "section 7",
                    "type": "string"
                },
                "$schema": {
                    "description": "RFC draft-wright-json-schema-00",
                    "type": "string"
                },
                "additionalItems": {
                    "description": "section 5.9",
                    "type": "integer"
                },
                "additionalProperties": {
                    "description": "section 5.18",
                    "type": "object",
                    "$ref": "#/definitions/json.RawMessage"
                },
                "allOf": {
                    "description": "section 5.22",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "anyOf": {
                    "description": "section 5.23",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "binaryEncoding": {
                    "description": "section 4.3",
                    "type": "string"
                },
                "default": {
                    "description": "section 6.2",
                    "type": "object"
                },
                "definitions": {
                    "description": "section 5.26",
                    "type": "object",
                    "$ref": "#/definitions/jsonschema.Definitions"
                },
                "dependencies": {
                    "description": "section 5.19",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jsonschema.Type"
                    }
                },
                "description": {
                    "description": "section 6.1",
                    "type": "string"
                },
                "enum": {
                    "description": "section 5.20",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "exclusiveMaximum": {
                    "description": "section 5.3",
                    "type": "boolean"
                },
                "exclusiveMinimum": {
                    "description": "section 5.5",
                    "type": "boolean"
                },
                "format": {
                    "description": "section 7",
                    "type": "string"
                },
                "items": {
                    "description": "section 5.9",
                    "type": "integer"
                },
                "maxItems": {
                    "description": "section 5.10",
                    "type": "integer"
                },
                "maxLength": {
                    "description": "section 5.6",
                    "type": "integer"
                },
                "maxProperties": {
                    "description": "section 5.13",
                    "type": "integer"
                },
                "maximum": {
                    "description": "section 5.2",
                    "type": "integer"
                },
                "media": {
                    "description": "RFC draft-wright-json-schema-hyperschema-00, section 4",
                    "type": "integer"
                },
                "minItems": {
                    "description": "section 5.11",
                    "type": "integer"
                },
                "minLength": {
                    "description": "section 5.7",
                    "type": "integer"
                },
                "minProperties": {
                    "description": "section 5.14",
                    "type": "integer"
                },
                "minimum": {
                    "description": "section 5.4",
                    "type": "integer"
                },
                "multipleOf": {
                    "description": "RFC draft-wright-json-schema-validation-00, section 5",
                    "type": "integer"
                },
                "not": {
                    "description": "section 5.25",
                    "type": "integer"
                },
                "oneOf": {
                    "description": "section 5.24",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pattern": {
                    "description": "section 5.8",
                    "type": "string"
                },
                "patternProperties": {
                    "description": "section 5.17",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jsonschema.Type"
                    }
                },
                "properties": {
                    "description": "section 5.16",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/jsonschema.Type"
                    }
                },
                "required": {
                    "description": "section 5.15",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "RFC draft-wright-json-schema-validation-00, section 6, 7",
                    "type": "string"
                },
                "type": {
                    "description": "section 5.21",
                    "type": "string"
                },
                "uniqueItems": {
                    "description": "section 5.12",
                    "type": "boolean"
                }
            }
        },
        "schema.Schema": {
            "$ref": "#/definitions/jsonschema.Schema"
        },
        "structure.AddressConfiguration": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "structure.BackendDeclaration": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "object",
                    "$ref": "#/definitions/structure.AddressConfiguration"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structure.EndpointDescriptor"
                    }
                },
                "libVersion": {
                    "type": "string"
                },
                "moduleName": {
                    "type": "string"
                },
                "requiredModules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structure.ModuleDependency"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "structure.EndpointDescriptor": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "inner": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "userAuthRequired": {
                    "type": "boolean"
                }
            }
        },
        "structure.GrpcError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "errorCode": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "structure.ModuleDependency": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = docs.SwaggerInfo{
	Version:     "2.4.1",
	Host:        "localhost:9003",
	BasePath:    "/api/config",
	Schemes:     []string{},
	Title:       "ISP configuration service",
	Description: "Сервис управления конфигурацией модулей ISP кластера",
}

func init() {
	docs.InitSwagger(SwaggerInfo, doc)
}
